worker_processes auto;

events {
    worker_connections 1024;
}

http {
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream backend {
        server back-end-app:9090;
        server back-end-app:9091;
        server back-end-app:9092;
        server back-end-app:9093;
    }

    upstream web-frontend {
        server hoppang_web_front:10244;
    }

    # HTTP to HTTPS redirection for both domains
    server {
        listen 80;
        server_name hoppang.store;

        location ~ /.well-known/acme-challenge {
            allow all;
            root /usr/share/nginx/html/letsencrypt;
        }

        location / {
            return 301 https://$host$request_uri; # HTTP 요청을 HTTPS로 리디렉션
        }
    }

    server {
        listen 443 ssl;
        server_name hoppang.store;

        ssl_certificate /etc/nginx/ssl/hoppang-store-certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/hoppang-store-private.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://web-frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            limit_except GET {
                allow all;
            }
        }

        location /api {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_header Authorization;

            # CORS 설정 추가
            add_header 'Access-Control-Allow-Origin' 'https://hoppang.store' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Authorization' always;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}